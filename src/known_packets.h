#include <Arduino.h>


// const uint8_t rx_startup[] = {
//     0xAA, 0x80, 0x07, 0x05, 0x05, 0x03, 0xF2, 0x00, 0x0A, 0x03, 0x89
// };


// Non-addressable packets

const uint8_t tx_discover[] = {
    0xAA, 0x82, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

//[00217214] RX: AA 8E 09 01 00 00 00 00 00 00 00 (UNKNOWN) [11 bytes]
const uint8_t tx_powerup[] = {
    0xAA, 0x8E, 0x09, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const uint8_t tx_powerdown[] = {
    0xAA, 0x8E, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

// [00252814] RX: AA 05 0C 00 00 00 00 00 00 00 00 (UNKNOWN) [11 bytes]
const uint8_t tx_warmup_complete[] = {
    0xAA, 0x05, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};


// [00228327] RX: AA 80 03 08 00 00 00 00 00 00 00 (UNKNOWN) [11 bytes]
const uint8_t rx_led_on_conf[] = {
    0xAA, 0x80, 0x03, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

// Warm-up Packets

// [00252830] RX: AA 80 0C 00 00 00 00 00 00 00 00 (UNKNOWN) [11 bytes]
const uint8_t rx_warmup_complete[] = {
    0xAA, 0x80, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

// [00016488] RX: AA 80 0A 01 00 00 00 00 00 00 00 (UNKNOWN) [11 bytes]
const uint8_t rx_startup_comp[] = {
    0xAA, 0x80, 0x0A, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};



// [00559758] RX: AA 05 01 00 00 00 00 00 00 00 00 (...........) [11 bytes]
// const uint8_t tx_heartbeat[] = {
//     0xAA, 0x05, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
// };


//[00559782] RX: AA 80 01 04 03 87 00 00 00 00 00 (...........) [11 bytes]
// const uint8_t rx_heartbeat_running[] = {
//     0xAA, 0x80, 0x01, 0x04, 0x03, 0x87, 0x00, 0x00, 0x00, 0x00, 0x00
// };

// [00228306] RX: AA 05 03 08 00 00 00 00 00 00 00 (UNKNOWN) [11 bytes]
// const uint8_t tx_led_on_conf[] = {
//     0xAA, 0x05, 0x03, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
// };






// Serial Number Request Packets

// [00217314] RX: AA 05 AF 01 00 00 00 00 00 00 00 - Request first part of serial number
// const uint8_t tx_ser_no_1[] = {
//     0xAA, 0x05, 0xAF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
// };

// [00217336] RX: AA 80 AF 52 45 50 31 41 46 30 35 - First part of serial number response
// const uint8_t rx_ser_no_1[] = {
//     0xAA, 0x80, 0xAF, 0x52, 0x45, 0x50, 0x31, 0x41, 0x46, 0x30, 0x35
// };


// // [00217444] RX: AA 05 B7 01 00 00 00 00 00 00 00 - Request second part of serial number
// const uint8_t tx_ser_no_2[] = {
//     0xAA, 0x05, 0xB7, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
// };


// [00217467] RX: AA 80 B7 42 41 41 37 33 30 33 00 - Second part of serial number response
// const uint8_t rx_ser_no_2[] = {
//     0xAA, 0x80, 0xB7, 0x42, 0x41, 0x41, 0x37, 0x33, 0x30, 0x33, 0x00
// };


// [00217574] RX: AA 05 BF 01 00 00 00 00 00 00 00 - Start warmup command
// const uint8_t tx_warmup[] = {
//     0xAA, 0x05, 0xBF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
// };


// [00217598] RX: AA 80 BF FF FF FF FF FF FF FF FF - Warmup acknowledgment
// const uint8_t rx_warmup[] = {
//     0xAA, 0x80, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
// };


// [00016470] RX: AA 05 0A 01 00 00 00 00 00 00 00 (UNKNOWN) [11 bytes]
// const uint8_t tx_startup_comp[] = {
//     0xAA, 0x05, 0x0A, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
// };


